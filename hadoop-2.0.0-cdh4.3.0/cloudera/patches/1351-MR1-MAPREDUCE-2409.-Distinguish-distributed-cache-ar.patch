From 738ddaf99b07204580a9fc3f2a97a195a2eac574 Mon Sep 17 00:00:00 2001
From: Christopher Douglas <cdouglas@apache.org>
Date: Thu, 31 Mar 2011 08:12:48 +0000
Subject: [PATCH 1351/1357] MR1: MAPREDUCE-2409. Distinguish distributed cache artifacts localized as
 files, archives. Contributed by Siddharth Seth

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.20-security@1087209 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit 093cf31c10a2d05fd82ec9406ccb8e4b20a582e0)
(cherry picked from commit c2a4f8836d88554f4e91a3e4901a40d743eae8b6)

Conflicts:
	src/test/org/apache/hadoop/filecache/TestTrackerDistributedCacheManager.java
(cherry picked from commit f056597ebd04d267098f406990dd051b07ebb9ca)
(cherry picked from commit ad21ca0b4648324b0bb517553d595765f7eb7d1b)
(cherry picked from commit 15d6975e671056aa295ccf8d5fe65e875054e0d5)
---
 .../filecache/TrackerDistributedCacheManager.java  |   11 +++--
 .../TestTrackerDistributedCacheManager.java        |   43 ++++++++++++++++++++
 2 files changed, 49 insertions(+), 5 deletions(-)

diff --git a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/filecache/TrackerDistributedCacheManager.java b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/filecache/TrackerDistributedCacheManager.java
index 16b596e..f9b2ddb 100644
--- a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/filecache/TrackerDistributedCacheManager.java
+++ b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/filecache/TrackerDistributedCacheManager.java
@@ -163,7 +163,7 @@ public class TrackerDistributedCacheManager {
                      boolean isPublic, CacheFile file) throws IOException {
     String key;
     String user = getLocalizedCacheOwner(isPublic);
-    key = getKey(cache, conf, confFileStamp, user);
+    key = getKey(cache, conf, confFileStamp, user, isArchive);
     CacheStatus lcacheStatus;
     Path localizedPath = null;
     Path localPath = null;
@@ -633,11 +633,12 @@ public class TrackerDistributedCacheManager {
     return true;
   }
 
-  String getKey(URI cache, Configuration conf, long timeStamp, String user) 
-      throws IOException {
-    return makeRelative(cache, conf) + String.valueOf(timeStamp) + user;
+  String getKey(URI cache, Configuration conf, long timeStamp, String user,
+      boolean isArchive) throws IOException {
+    return (isArchive ? "a" : "f") + "^" + makeRelative(cache, conf)
+        + String.valueOf(timeStamp) + user;
   }
-  
+
   /**
    * This method create symlinks for all files in a given dir in another 
    * directory.
diff --git a/hadoop-mapreduce1-project/src/test/org/apache/hadoop/filecache/TestTrackerDistributedCacheManager.java b/hadoop-mapreduce1-project/src/test/org/apache/hadoop/filecache/TestTrackerDistributedCacheManager.java
index 08f28cb..8493a12 100644
--- a/hadoop-mapreduce1-project/src/test/org/apache/hadoop/filecache/TestTrackerDistributedCacheManager.java
+++ b/hadoop-mapreduce1-project/src/test/org/apache/hadoop/filecache/TestTrackerDistributedCacheManager.java
@@ -338,6 +338,49 @@ public class TestTrackerDistributedCacheManager extends TestCase {
     checkLocalizedPath(false);
   }
 
+  public void testSameNameFileArchiveCache() throws IOException,
+      InterruptedException {
+    if (!canRun()) {
+      return;
+    }
+    TrackerDistributedCacheManager manager = new TrackerDistributedCacheManager(
+        conf, taskController);
+    String userName = getJobOwnerName();
+    File workDir = new File(TEST_ROOT_DIR, "workdir");
+    Path cacheFile = new Path(TEST_ROOT_DIR, "fileArchiveCacheFile");
+
+    createPublicTempFile(cacheFile);
+    Configuration conf1 = new Configuration(conf);
+    conf1.set("user.name", userName);
+
+    DistributedCache.addCacheFile(cacheFile.toUri(), conf1);
+    DistributedCache.addCacheArchive(cacheFile.toUri(), conf1);
+    TrackerDistributedCacheManager.determineTimestampsAndCacheVisibilities(conf1);
+    dumpState(conf1);
+
+    TaskDistributedCacheManager handle = manager
+        .newTaskDistributedCacheManager(new JobID("jt", 1), conf1);
+    handle.setupCache(conf1, TaskTracker.getPublicDistributedCacheDir(),
+        TaskTracker.getPrivateDistributedCacheDir(userName));
+
+    TaskDistributedCacheManager.CacheFile cFile = handle.getCacheFiles().get(0);
+    TaskDistributedCacheManager.CacheFile cArchive = handle.getCacheFiles()
+        .get(1);
+
+    String distCacheDir = TaskTracker.getPublicDistributedCacheDir();
+
+    Path localizedPathForFile = manager.getLocalCache(cacheFile.toUri(), conf1,
+        distCacheDir, fs.getFileStatus(cacheFile), false, cFile.timestamp,
+        true, cFile);
+
+    Path localizedPathForArchive = manager.getLocalCache(cacheFile.toUri(),
+        conf1, distCacheDir, fs.getFileStatus(cacheFile), true,
+        cArchive.timestamp, true, cArchive);
+    assertNotSame("File and Archive resolve to the same path: "
+        + localizedPathForFile + ". Should differ.", localizedPathForFile,
+        localizedPathForArchive);
+  }
+
   private void appendStringArray(StringBuilder buffer, String[] data) {
     if (data != null && data.length != 0) {
       buffer.append(data[0]);
-- 
1.7.0.4

