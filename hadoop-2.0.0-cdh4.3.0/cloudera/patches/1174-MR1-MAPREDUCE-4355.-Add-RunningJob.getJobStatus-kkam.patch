From c65529811ace7f178e04291b3fc30a12b1caf881 Mon Sep 17 00:00:00 2001
From: Alejandro Abdelnur <tucu@apache.org>
Date: Thu, 5 Jul 2012 16:29:26 +0000
Subject: [PATCH 1174/1357] MR1: MAPREDUCE-4355. Add RunningJob.getJobStatus() (kkambatl via tucu)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-1@1357724 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit e976bd7fe67a3ef7f8d62bddc826a195674369dd)

Conflicts:
- src/test/org/apache/hadoop/mapred/TestNetworkedJob.java (from upstream change) not included as it required
  several other changes.

Reason: Customer (eBay) request
Ref: CDH-5730
Author: Karthik Kambatla
(cherry picked from commit 45d61ad391961f40f14c5483653d55293f1c551f)
---
 src/mapred/org/apache/hadoop/mapred/JobClient.java |    6 ++++++
 .../org/apache/hadoop/mapred/RunningJob.java       |   13 ++++++++++---
 2 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/src/mapred/org/apache/hadoop/mapred/JobClient.java b/src/mapred/org/apache/hadoop/mapred/JobClient.java
index 328db92..19f2396 100644
--- a/src/mapred/org/apache/hadoop/mapred/JobClient.java
+++ b/src/mapred/org/apache/hadoop/mapred/JobClient.java
@@ -437,6 +437,12 @@ public class JobClient extends Configured implements MRConstants, Tool  {
       ensureFreshStatus();
       return status.getFailureInfo();
     }
+
+    @Override
+    public JobStatus getJobStatus() throws IOException {
+      updateStatus();
+      return status;
+    }
   }
 
   private JobSubmissionProtocol jobSubmitClient;
diff --git a/src/mapred/org/apache/hadoop/mapred/RunningJob.java b/src/mapred/org/apache/hadoop/mapred/RunningJob.java
index 89d9072..705d697 100644
--- a/src/mapred/org/apache/hadoop/mapred/RunningJob.java
+++ b/src/mapred/org/apache/hadoop/mapred/RunningJob.java
@@ -128,15 +128,22 @@ public interface RunningJob {
 
   /**
    * Returns the current state of the Job.
-   * {@link JobStatus}
    * 
    * @throws IOException
    */
   public int getJobState() throws IOException;
   
   /**
-   * Kill the running job.  Blocks until all job tasks have been
-   * killed as well.  If the job is no longer running, it simply returns.
+   * Returns a snapshot of the current status, {@link JobStatus}, of the Job.
+   * Need to call again for latest information.
+   * 
+   * @throws IOException
+   */
+  public JobStatus getJobStatus() throws IOException;
+
+  /**
+   * Kill the running job. Blocks until all job tasks have been killed as well.
+   * If the job is no longer running, it simply returns.
    * 
    * @throws IOException
    */
-- 
1.7.0.4

