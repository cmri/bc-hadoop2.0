From 8f11de3e8fc212ce00efdf0998327d8e727996bd Mon Sep 17 00:00:00 2001
From: Tom White <tom@cloudera.com>
Date: Wed, 29 Aug 2012 18:02:53 +0100
Subject: [PATCH 1182/1357] MR1: CLOUDERA-BUILD. MR1 does not have "mradmin -refreshServiceAcl" implemented

Reason: Bug
Ref: CDH-7644
Author: Tom White
---
 .../org/apache/hadoop/mapred/JTProtocols.java      |    2 +-
 .../org/apache/hadoop/mapred/tools/MRAdmin.java    |    2 +-
 .../RefreshAuthorizationPolicyProtocol.java        |   47 ++++++++++++++++++++
 3 files changed, 49 insertions(+), 2 deletions(-)
 create mode 100644 src/mapred/org/apache/hadoop/mr1security/authorize/RefreshAuthorizationPolicyProtocol.java

diff --git a/src/mapred/org/apache/hadoop/mapred/JTProtocols.java b/src/mapred/org/apache/hadoop/mapred/JTProtocols.java
index cd0daa0..e378904 100644
--- a/src/mapred/org/apache/hadoop/mapred/JTProtocols.java
+++ b/src/mapred/org/apache/hadoop/mapred/JTProtocols.java
@@ -1,7 +1,7 @@
 package org.apache.hadoop.mapred;
 
 import org.apache.hadoop.mr1security.RefreshUserMappingsProtocol;
-import org.apache.hadoop.security.authorize.RefreshAuthorizationPolicyProtocol;
+import org.apache.hadoop.mr1security.authorize.RefreshAuthorizationPolicyProtocol;
 import org.apache.hadoop.mr1tools.GetUserMappingsProtocol;
 
 public interface JTProtocols extends
diff --git a/src/mapred/org/apache/hadoop/mapred/tools/MRAdmin.java b/src/mapred/org/apache/hadoop/mapred/tools/MRAdmin.java
index 8a807ba..ed445e1 100644
--- a/src/mapred/org/apache/hadoop/mapred/tools/MRAdmin.java
+++ b/src/mapred/org/apache/hadoop/mapred/tools/MRAdmin.java
@@ -31,7 +31,7 @@ import org.apache.hadoop.mapred.JobTracker;
 import org.apache.hadoop.net.NetUtils;
 import org.apache.hadoop.mr1security.RefreshUserMappingsProtocol;
 import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.security.authorize.RefreshAuthorizationPolicyProtocol;
+import org.apache.hadoop.mr1security.authorize.RefreshAuthorizationPolicyProtocol;
 import org.apache.hadoop.util.Tool;
 import org.apache.hadoop.util.ToolRunner;
 
diff --git a/src/mapred/org/apache/hadoop/mr1security/authorize/RefreshAuthorizationPolicyProtocol.java b/src/mapred/org/apache/hadoop/mr1security/authorize/RefreshAuthorizationPolicyProtocol.java
new file mode 100644
index 0000000..53980ff
--- /dev/null
+++ b/src/mapred/org/apache/hadoop/mr1security/authorize/RefreshAuthorizationPolicyProtocol.java
@@ -0,0 +1,47 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.mr1security.authorize;
+
+import java.io.IOException;
+
+import org.apache.hadoop.classification.InterfaceAudience;
+import org.apache.hadoop.classification.InterfaceStability;
+import org.apache.hadoop.fs.CommonConfigurationKeys;
+import org.apache.hadoop.ipc.VersionedProtocol;
+import org.apache.hadoop.security.KerberosInfo;
+
+/**
+ * Protocol which is used to refresh the authorization policy in use currently.
+ */
+@KerberosInfo(
+    serverPrincipal=CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY)
+@InterfaceAudience.LimitedPrivate({"HDFS", "MapReduce"})
+@InterfaceStability.Evolving
+public interface RefreshAuthorizationPolicyProtocol extends VersionedProtocol {
+  
+  /**
+   * Version 1: Initial version
+   */
+  public static final long versionID = 1L;
+
+  /**
+   * Refresh the service-level authorization policy in-effect.
+   * @throws IOException
+   */
+  void refreshServiceAcl() throws IOException;
+}
-- 
1.7.0.4

