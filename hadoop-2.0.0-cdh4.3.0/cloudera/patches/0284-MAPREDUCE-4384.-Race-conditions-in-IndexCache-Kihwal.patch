From af1341f81adba85ab1b349918c5cda25daec39b2 Mon Sep 17 00:00:00 2001
From: Thomas Graves <tgraves@apache.org>
Date: Thu, 5 Jul 2012 21:36:02 +0000
Subject: [PATCH 0284/1357] MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1357937 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit 0b19f56e072805960bc4eb1917d5960bf268c649)
---
 .../java/org/apache/hadoop/mapred/IndexCache.java  |   36 +++++++++++--------
 1 files changed, 21 insertions(+), 15 deletions(-)

diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
index 63c148d..2dbdf11 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
@@ -67,13 +67,13 @@ class IndexCache {
     if (info == null) {
       info = readIndexFileToCache(fileName, mapId, expectedIndexOwner);
     } else {
-      synchronized (info) {
-        while (null == info.mapSpillRecord) {
-          try {
-            info.wait();
-          } catch (InterruptedException e) {
-            throw new IOException("Interrupted waiting for construction", e);
-          }
+      while (isUnderConstruction(info)) {
+        try {
+          // In case the entry is ready after the above check but
+          // before the following wait, we do timed wait.
+          info.wait(200);
+        } catch (InterruptedException e) {
+          throw new IOException("Interrupted waiting for construction", e);
         }
       }
       LOG.debug("IndexCache HIT: MapId " + mapId + " found");
@@ -88,6 +88,12 @@ class IndexCache {
     return info.mapSpillRecord.getIndex(reduce);
   }
 
+  private boolean isUnderConstruction(IndexInformation info) {
+    synchronized(info) {
+      return (null == info.mapSpillRecord);
+    }
+  }
+
   private IndexInformation readIndexFileToCache(Path indexFileName,
                                                 String mapId,
                                                 String expectedIndexOwner)
@@ -95,13 +101,13 @@ class IndexCache {
     IndexInformation info;
     IndexInformation newInd = new IndexInformation();
     if ((info = cache.putIfAbsent(mapId, newInd)) != null) {
-      synchronized (info) {
-        while (null == info.mapSpillRecord) {
-          try {
-            info.wait();
-          } catch (InterruptedException e) {
-            throw new IOException("Interrupted waiting for construction", e);
-          }
+      while (isUnderConstruction(info)) {
+        try {
+          // In case the entry is ready after the above check but
+          // before the following wait, we do timed wait.
+          info.wait(200);
+        } catch (InterruptedException e) {
+          throw new IOException("Interrupted waiting for construction", e);
         }
       }
       LOG.debug("IndexCache HIT: MapId " + mapId + " found");
@@ -139,7 +145,7 @@ class IndexCache {
    */
   public void removeMap(String mapId) {
     IndexInformation info = cache.get(mapId);
-    if ((info != null) && (info.getSize() == 0)) {
+    if (info == null || ((info != null) && isUnderConstruction(info))) {
       return;
     }
     info = cache.remove(mapId);
-- 
1.7.0.4

