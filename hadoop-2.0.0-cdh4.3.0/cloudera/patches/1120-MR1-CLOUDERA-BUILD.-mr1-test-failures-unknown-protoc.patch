From a744687492f8f078f107b64dc112706f51d425b6 Mon Sep 17 00:00:00 2001
From: Alejandro Abdelnur <tucu@cloudera.com>
Date: Thu, 15 Mar 2012 17:18:18 -0700
Subject: [PATCH 1120/1357] MR1: CLOUDERA BUILD. mr1 test failures "unknown protocol" on golden after 23.3 refresh

  Reason: GetUserMappingsProtocol from 0.23.3 is PB based
  Author: Alejandro Abdelnur
  Ref: CDH-4833
---
 .../org/apache/hadoop/mapred/JTProtocols.java      |    4 +-
 .../org/apache/hadoop/mapred/JobTracker.java       |    4 +-
 .../hadoop/mapred/MapReducePolicyProvider.java     |    4 +-
 .../org/apache/hadoop/mapred/tools/GetGroups.java  |    4 +-
 .../org/apache/hadoop/mapred/tools/MRAdmin.java    |    2 +-
 .../mr1security/RefreshUserMappingsProtocol.java   |   55 ++++++++++
 .../org/apache/hadoop/mr1tools/GetGroupsBase.java  |  107 ++++++++++++++++++++
 .../hadoop/mr1tools/GetUserMappingsProtocol.java   |   46 +++++++++
 8 files changed, 217 insertions(+), 9 deletions(-)
 create mode 100644 src/mapred/org/apache/hadoop/mr1security/RefreshUserMappingsProtocol.java
 create mode 100644 src/mapred/org/apache/hadoop/mr1tools/GetGroupsBase.java
 create mode 100644 src/mapred/org/apache/hadoop/mr1tools/GetUserMappingsProtocol.java

diff --git a/src/mapred/org/apache/hadoop/mapred/JTProtocols.java b/src/mapred/org/apache/hadoop/mapred/JTProtocols.java
index ce561ff..cd0daa0 100644
--- a/src/mapred/org/apache/hadoop/mapred/JTProtocols.java
+++ b/src/mapred/org/apache/hadoop/mapred/JTProtocols.java
@@ -1,8 +1,8 @@
 package org.apache.hadoop.mapred;
 
-import org.apache.hadoop.security.RefreshUserMappingsProtocol;
+import org.apache.hadoop.mr1security.RefreshUserMappingsProtocol;
 import org.apache.hadoop.security.authorize.RefreshAuthorizationPolicyProtocol;
-import org.apache.hadoop.tools.GetUserMappingsProtocol;
+import org.apache.hadoop.mr1tools.GetUserMappingsProtocol;
 
 public interface JTProtocols extends
   InterTrackerProtocol,
diff --git a/src/mapred/org/apache/hadoop/mapred/JobTracker.java b/src/mapred/org/apache/hadoop/mapred/JobTracker.java
index 7ccadf7..19a7821 100644
--- a/src/mapred/org/apache/hadoop/mapred/JobTracker.java
+++ b/src/mapred/org/apache/hadoop/mapred/JobTracker.java
@@ -92,7 +92,7 @@ import org.apache.hadoop.net.NodeBase;
 import org.apache.hadoop.net.ScriptBasedMapping;
 import org.apache.hadoop.security.AccessControlException;
 import org.apache.hadoop.security.Groups;
-import org.apache.hadoop.security.RefreshUserMappingsProtocol;
+import org.apache.hadoop.mr1security.RefreshUserMappingsProtocol;
 import org.apache.hadoop.security.SecurityUtil;
 import org.apache.hadoop.security.UserGroupInformation;
 import org.apache.hadoop.security.UserGroupInformation.AuthenticationMethod;
@@ -115,7 +115,7 @@ import org.apache.hadoop.mapreduce.security.token.DelegationTokenRenewal;
 import org.apache.hadoop.mapreduce.security.token.JobTokenSecretManager;
 import org.apache.hadoop.mapreduce.server.jobtracker.TaskTracker;
 import org.apache.hadoop.security.Credentials;
-import org.apache.hadoop.tools.GetUserMappingsProtocol;
+import org.apache.hadoop.mr1tools.GetUserMappingsProtocol;
 import org.mortbay.util.ajax.JSON;
 
 /*******************************************************
diff --git a/src/mapred/org/apache/hadoop/mapred/MapReducePolicyProvider.java b/src/mapred/org/apache/hadoop/mapred/MapReducePolicyProvider.java
index 03f6c59..7c01d9d 100644
--- a/src/mapred/org/apache/hadoop/mapred/MapReducePolicyProvider.java
+++ b/src/mapred/org/apache/hadoop/mapred/MapReducePolicyProvider.java
@@ -17,11 +17,11 @@
  */
 package org.apache.hadoop.mapred;
 
-import org.apache.hadoop.security.RefreshUserMappingsProtocol;
+import org.apache.hadoop.mr1security.RefreshUserMappingsProtocol;
 import org.apache.hadoop.security.authorize.PolicyProvider;
 import org.apache.hadoop.security.authorize.RefreshAuthorizationPolicyProtocol;
 import org.apache.hadoop.security.authorize.Service;
-import org.apache.hadoop.tools.GetUserMappingsProtocol;
+import org.apache.hadoop.mr1tools.GetUserMappingsProtocol;
 
 /**
  * {@link PolicyProvider} for Map-Reduce protocols.
diff --git a/src/mapred/org/apache/hadoop/mapred/tools/GetGroups.java b/src/mapred/org/apache/hadoop/mapred/tools/GetGroups.java
index a2be335..cdd4ddd 100644
--- a/src/mapred/org/apache/hadoop/mapred/tools/GetGroups.java
+++ b/src/mapred/org/apache/hadoop/mapred/tools/GetGroups.java
@@ -23,7 +23,7 @@ import java.net.InetSocketAddress;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.mapred.JobTracker;
-import org.apache.hadoop.tools.GetGroupsBase;
+import org.apache.hadoop.mr1tools.GetGroupsBase;
 import org.apache.hadoop.util.ToolRunner;
 
 /**
@@ -55,4 +55,4 @@ public class GetGroups extends GetGroupsBase {
     int res = ToolRunner.run(new GetGroups(new Configuration()), argv);
     System.exit(res);
   }
-}
\ No newline at end of file
+}
diff --git a/src/mapred/org/apache/hadoop/mapred/tools/MRAdmin.java b/src/mapred/org/apache/hadoop/mapred/tools/MRAdmin.java
index be8e5fd..8a807ba 100644
--- a/src/mapred/org/apache/hadoop/mapred/tools/MRAdmin.java
+++ b/src/mapred/org/apache/hadoop/mapred/tools/MRAdmin.java
@@ -29,7 +29,7 @@ import org.apache.hadoop.mapred.AdminOperationsProtocol;
 import org.apache.hadoop.mapred.JobConf;
 import org.apache.hadoop.mapred.JobTracker;
 import org.apache.hadoop.net.NetUtils;
-import org.apache.hadoop.security.RefreshUserMappingsProtocol;
+import org.apache.hadoop.mr1security.RefreshUserMappingsProtocol;
 import org.apache.hadoop.security.UserGroupInformation;
 import org.apache.hadoop.security.authorize.RefreshAuthorizationPolicyProtocol;
 import org.apache.hadoop.util.Tool;
diff --git a/src/mapred/org/apache/hadoop/mr1security/RefreshUserMappingsProtocol.java b/src/mapred/org/apache/hadoop/mr1security/RefreshUserMappingsProtocol.java
new file mode 100644
index 0000000..7c42af9
--- /dev/null
+++ b/src/mapred/org/apache/hadoop/mr1security/RefreshUserMappingsProtocol.java
@@ -0,0 +1,55 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.mr1security;
+
+import java.io.IOException;
+
+import org.apache.hadoop.classification.InterfaceAudience;
+import org.apache.hadoop.classification.InterfaceStability;
+import org.apache.hadoop.fs.CommonConfigurationKeys;
+import org.apache.hadoop.ipc.VersionedProtocol;
+import org.apache.hadoop.security.KerberosInfo;
+
+/**
+ * Protocol use 
+ *
+ */
+@KerberosInfo(
+    serverPrincipal=CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY)
+@InterfaceAudience.LimitedPrivate({"HDFS", "MapReduce"})
+@InterfaceStability.Evolving
+public interface RefreshUserMappingsProtocol extends VersionedProtocol {
+  
+  /**
+   * Version 1: Initial version.
+   */
+  public static final long versionID = 1L;
+
+  /**
+   * Refresh user to group mappings.
+   * @throws IOException
+   */
+  public void refreshUserToGroupsMappings() throws IOException;
+  
+  /**
+   * Refresh superuser proxy group list
+   * @throws IOException
+   */
+  public void refreshSuperUserGroupsConfiguration() 
+  throws IOException;
+}
diff --git a/src/mapred/org/apache/hadoop/mr1tools/GetGroupsBase.java b/src/mapred/org/apache/hadoop/mr1tools/GetGroupsBase.java
new file mode 100644
index 0000000..3953236
--- /dev/null
+++ b/src/mapred/org/apache/hadoop/mr1tools/GetGroupsBase.java
@@ -0,0 +1,107 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.mr1tools;
+
+import java.io.IOException;
+import java.io.PrintStream;
+import java.net.InetSocketAddress;
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.conf.Configured;
+import org.apache.hadoop.ipc.RPC;
+import org.apache.hadoop.net.NetUtils;
+import org.apache.hadoop.security.UserGroupInformation;
+import org.apache.hadoop.util.Tool;
+
+/**
+ * Base class for the HDFS and MR implementations of tools which fetch and
+ * display the groups that users belong to.
+ */
+public abstract class GetGroupsBase extends Configured implements Tool {
+  
+  private PrintStream out;
+  
+  /**
+   * Create an instance of this tool using the given configuration.
+   * @param conf
+   */
+  protected GetGroupsBase(Configuration conf) {
+    this(conf, System.out);
+  }
+  
+  /**
+   * Used exclusively for testing.
+   * 
+   * @param conf The configuration to use.
+   * @param out The PrintStream to write to, instead of System.out
+   */
+  protected GetGroupsBase(Configuration conf, PrintStream out) {
+    super(conf);
+    this.out = out;
+  }
+
+  /**
+   * Get the groups for the users given and print formatted output to the
+   * {@link PrintStream} configured earlier.
+   */
+  @Override
+  public int run(String[] args) throws Exception {
+    if (args.length == 0) {
+      args = new String[] { UserGroupInformation.getCurrentUser().getUserName() }; 
+    }
+
+    for (String username : args) {
+      StringBuilder sb = new StringBuilder();
+      sb.append(username + " :");
+      for (String group : getUgmProtocol().getGroupsForUser(username)) {
+        sb.append(" ");
+        sb.append(group);
+      }
+      out.println(sb);
+    }
+
+    return 0;
+  }
+
+  /**
+   * Must be overridden by subclasses to get the address where the
+   * {@link GetUserMappingsProtocol} implementation is running.
+   * 
+   * @param conf The configuration to use.
+   * @return The address where the service is listening.
+   * @throws IOException
+   */
+  protected abstract InetSocketAddress getProtocolAddress(Configuration conf)
+      throws IOException;
+  
+  /**
+   * Get a client of the {@link GetUserMappingsProtocol}.
+   * @return A {@link GetUserMappingsProtocol} client proxy.
+   * @throws IOException
+   */
+  protected GetUserMappingsProtocol getUgmProtocol() throws IOException {
+    GetUserMappingsProtocol userGroupMappingProtocol =
+      RPC.getProxy(GetUserMappingsProtocol.class, 
+          GetUserMappingsProtocol.versionID,
+          getProtocolAddress(getConf()), UserGroupInformation.getCurrentUser(),
+          getConf(), NetUtils.getSocketFactory(getConf(),
+              GetUserMappingsProtocol.class));
+    return userGroupMappingProtocol;
+  }
+
+}
diff --git a/src/mapred/org/apache/hadoop/mr1tools/GetUserMappingsProtocol.java b/src/mapred/org/apache/hadoop/mr1tools/GetUserMappingsProtocol.java
new file mode 100644
index 0000000..e617dc8
--- /dev/null
+++ b/src/mapred/org/apache/hadoop/mr1tools/GetUserMappingsProtocol.java
@@ -0,0 +1,46 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.mr1tools;
+
+import java.io.IOException;
+
+import org.apache.hadoop.classification.InterfaceAudience;
+import org.apache.hadoop.classification.InterfaceStability;
+import org.apache.hadoop.ipc.VersionedProtocol;
+
+/**
+ * Protocol implemented by the Name Node and Job Tracker which maps users to
+ * groups.
+ */
+@InterfaceAudience.LimitedPrivate({"HDFS", "MapReduce"})
+@InterfaceStability.Evolving
+public interface GetUserMappingsProtocol extends VersionedProtocol {
+  
+  /**
+   * Version 1: Initial version.
+   */
+  public static final long versionID = 1L;
+  
+  /**
+   * Get the groups which are mapped to the given user.
+   * @param user The user to get the groups for.
+   * @return The set of groups the user belongs to.
+   * @throws IOException
+   */
+  public String[] getGroupsForUser(String user) throws IOException;
+}
-- 
1.7.0.4

