From 636167c90fa04ead9c9249819adfd969f7511e7a Mon Sep 17 00:00:00 2001
From: Alejandro Abdelnur <tucu@cloudera.com>
Date: Mon, 28 Jan 2013 16:16:03 -0800
Subject: [PATCH 1274/1357] MR1: CLOUDERA-BUILD. JT HA: jobtrackerha daemon shuts down on secure cluster after a while

  Reason: bug
  Author: Alejandro Abdelnur
  Ref: CDH-10165
---
 .../org/apache/hadoop/mapred/JobTracker.java       |   21 ++++++++++---------
 .../apache/hadoop/mapred/JobTrackerHADaemon.java   |   16 ++++++++------
 2 files changed, 20 insertions(+), 17 deletions(-)

diff --git a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobTracker.java b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobTracker.java
index 5559fda..af3ae89 100644
--- a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobTracker.java
+++ b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobTracker.java
@@ -18,13 +18,9 @@
 package org.apache.hadoop.mapred;
 
 
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.PrintWriter;
-import java.io.InputStreamReader;
 import java.io.Writer;
 import java.lang.management.ManagementFactory;
 import java.net.BindException;
@@ -70,7 +66,6 @@ import org.apache.hadoop.fs.LocalDirAllocator;
 import org.apache.hadoop.fs.Options;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.fs.permission.FsPermission;
-import org.apache.hadoop.mapred.JobSubmissionProtocol;
 import org.apache.hadoop.mapreduce.security.token.delegation.DelegationTokenIdentifier;
 import org.apache.hadoop.mapreduce.security.token.delegation.DelegationTokenSecretManager;
 import org.apache.hadoop.http.HttpServer;
@@ -81,7 +76,6 @@ import org.apache.hadoop.ipc.Server;
 import org.apache.hadoop.ipc.RPC.VersionMismatch;
 import org.apache.hadoop.mapred.AuditLogger.Constants;
 import org.apache.hadoop.mapred.JobHistory.Keys;
-import org.apache.hadoop.mapred.JobHistory.Listener;
 import org.apache.hadoop.mapred.JobHistory.Values;
 import org.apache.hadoop.mapred.JobInProgress.KillInterruptedException;
 import org.apache.hadoop.mapred.JobStatusChangeEvent.EventType;
@@ -1729,6 +1723,9 @@ public class JobTracker implements MRConstants, JTProtocols, JobTrackerMXBean {
 
   private QueueManager queueManager;
 
+  // To avoid the JT from doing a new login() as re-login seems to be destructive
+  static volatile boolean loggedIn = false;
+    
   /**
    * Start the JobTracker process, listen on the indicated port
    */
@@ -1757,11 +1754,15 @@ public class JobTracker implements MRConstants, JTProtocols, JobTrackerMXBean {
     InetSocketAddress addr = getAddress(conf);
     this.localMachine = addr.getHostName();
     this.port = addr.getPort();
-    // find the owner of the process
-    // get the desired principal to load
-    UserGroupInformation.setConfiguration(conf);
-    SecurityUtil.login(conf, JT_KEYTAB_FILE, JT_USER_NAME, localMachine);
 
+
+    if (!loggedIn) { // skip if already logged in
+      // find the owner of the process
+      // get the desired principal to load
+      UserGroupInformation.setConfiguration(conf);
+      SecurityUtil.login(conf, JT_KEYTAB_FILE, JT_USER_NAME, localMachine);
+    }
+    
     long secretKeyInterval = 
     conf.getLong(DELEGATION_KEY_UPDATE_INTERVAL_KEY, 
                    DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT);
diff --git a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobTrackerHADaemon.java b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobTrackerHADaemon.java
index 94c768a..50de101 100644
--- a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobTrackerHADaemon.java
+++ b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobTrackerHADaemon.java
@@ -69,12 +69,6 @@ public class JobTrackerHADaemon {
 
   public void start() throws IOException {
 
-    //Using a thread outside of all login context to start/stop the JT
-    //otherwise the credentials of the UGI making the RPC call to activate
-    //get in the way breaking things.
-    jtRunner = new JobTrackerRunner();
-    jtRunner.start();
-
     Configuration jtConf = new Configuration(conf);
     String logicalName = HAUtil.getLogicalName(jtConf);
     String jtId = HAUtil.getJobTrackerId(jtConf);
@@ -85,8 +79,16 @@ public class JobTrackerHADaemon {
     String localMachine = addr.getHostName();
     UserGroupInformation.setConfiguration(conf);
     SecurityUtil.login(conf, JobTracker.JT_KEYTAB_FILE, JobTracker.JT_USER_NAME, localMachine);
-        
     
+    // To avoid the JT from doing a new login() as re-login seems to be destructive
+    JobTracker.loggedIn = true;
+    
+    //Using a thread outside of all login context to start/stop the JT
+    //otherwise the credentials of the UGI making the RPC call to activate
+    //get in the way breaking things.
+    jtRunner = new JobTrackerRunner();
+    jtRunner.start();
+            
     this.proto = new JobTrackerHAServiceProtocol(jtConf, jtRunner);
     
     RPC.setProtocolEngine(conf, HAServiceProtocolPB.class,
-- 
1.7.0.4

