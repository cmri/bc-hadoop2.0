From af3cf26c636b4a3728aff9ad8011f2213583e3c6 Mon Sep 17 00:00:00 2001
From: Tom White <tom@cloudera.com>
Date: Fri, 30 Dec 2011 13:28:40 -0800
Subject: [PATCH 1090/1357] MR1: CLOUDERA-BUILD. Fix TestMapReduceLocal, TestJobTrackerXmlJsp, TestMRMultipleOutputs, and remove failing test TestFileSystem.testCommandFormat  since the code has changed and the test is no longer appropriate.

---
 build.xml                                          |    6 +----
 .../mapreduce/lib/output/MultipleOutputs.java      |    2 +-
 src/test/org/apache/hadoop/fs/TestFileSystem.java  |   15 ------------
 .../apache/hadoop/mapred/TestJobTrackerXmlJsp.java |   25 +++++++++++++++++--
 .../hadoop/mapreduce/TestMapReduceLocal.java       |    5 +--
 5 files changed, 26 insertions(+), 27 deletions(-)

diff --git a/build.xml b/build.xml
index 926c5de..35c3293 100644
--- a/build.xml
+++ b/build.xml
@@ -436,12 +436,8 @@
      webxml="${build.webapps}/task/WEB-INF/web.xml">
     </jsp-compile>
 
-    <copy todir="${build.webapps}/job">
-      <fileset dir="${src.webapps}/job" includes="**/*.jsp"/>
-    </copy>
-     
     <jsp-compile
-     uriroot="${build.webapps}/job"
+     uriroot="${src.webapps}/job"
      outputdir="${build.src}"
      package="org.apache.hadoop.mapred"
      webxml="${build.webapps}/job/WEB-INF/web.xml">
diff --git a/src/mapred/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java b/src/mapred/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java
index 5145c25..daa007f 100644
--- a/src/mapred/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java
+++ b/src/mapred/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java
@@ -432,7 +432,7 @@ public class MultipleOutputs<KEYOUT, VALUEOUT> {
 
     // The following trick leverages the instantiation of a record writer via
     // the job thus supporting arbitrary output formats.
-    Job job = new Job(context.getConfiguration());
+    Job job = new Job(new Configuration(context.getConfiguration()));
     job.setOutputFormatClass(getNamedOutputFormatClass(context, nameOutput));
     job.setOutputKeyClass(getNamedOutputKeyClass(context, nameOutput));
     job.setOutputValueClass(getNamedOutputValueClass(context, nameOutput));
diff --git a/src/test/org/apache/hadoop/fs/TestFileSystem.java b/src/test/org/apache/hadoop/fs/TestFileSystem.java
index 006f959..3767a27 100644
--- a/src/test/org/apache/hadoop/fs/TestFileSystem.java
+++ b/src/test/org/apache/hadoop/fs/TestFileSystem.java
@@ -103,21 +103,6 @@ public class TestFileSystem extends TestCase {
     fs.delete(READ_DIR, true);
   }
 
-  public static void testCommandFormat() throws Exception {
-    // This should go to TestFsShell.java when it is added.
-    CommandFormat cf;
-    cf= new CommandFormat("copyToLocal", 2,2,"crc","ignoreCrc");
-    assertEquals(cf.parse(new String[] {"-get","file", "-"}, 1).get(1), "-");
-    assertEquals(cf.parse(new String[] {"-get","file","-ignoreCrc","/foo"}, 1).get(1),"/foo");
-    cf = new CommandFormat("tail", 1, 1, "f");
-    assertEquals(cf.parse(new String[] {"-tail","fileName"}, 1).get(0),"fileName");
-    assertEquals(cf.parse(new String[] {"-tail","-f","fileName"}, 1).get(0),"fileName");
-    cf = new CommandFormat("setrep", 2, 2, "R", "w");
-    assertEquals(cf.parse(new String[] {"-setrep","-R","2","/foo/bar"}, 1).get(1), "/foo/bar");
-    cf = new CommandFormat("put", 2, 10000);
-    assertEquals(cf.parse(new String[] {"-put", "-", "dest"}, 1).get(1), "dest"); 
-  }
-
   public static void createControlFile(FileSystem fs,
                                        long megaBytes, int numFiles,
                                        long seed) throws Exception {
diff --git a/src/test/org/apache/hadoop/mapred/TestJobTrackerXmlJsp.java b/src/test/org/apache/hadoop/mapred/TestJobTrackerXmlJsp.java
index e1074c0..488f803 100644
--- a/src/test/org/apache/hadoop/mapred/TestJobTrackerXmlJsp.java
+++ b/src/test/org/apache/hadoop/mapred/TestJobTrackerXmlJsp.java
@@ -17,16 +17,23 @@
  */
 package org.apache.hadoop.mapred;
 
+import java.io.BufferedReader;
 import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.net.HttpURLConnection;
+import java.net.URL;
+
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.parsers.ParserConfigurationException;
-import org.w3c.dom.Document;
-import org.w3c.dom.NodeList;
-import org.xml.sax.SAXException;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.io.IOUtils;
+import org.w3c.dom.Document;
+import org.w3c.dom.NodeList;
+import org.xml.sax.SAXException;
 
 public class TestJobTrackerXmlJsp extends ClusterMapReduceTestCase {
 
@@ -41,6 +48,18 @@ public class TestJobTrackerXmlJsp extends ClusterMapReduceTestCase {
 
     String xmlJspUrl = "http://localhost:" + infoPort + "/jobtracker.jspx";
     LOG.info("Retrieving XML from URL: " + xmlJspUrl);
+    
+    HttpURLConnection connection = (HttpURLConnection)new URL("http://localhost:" + infoPort + "/jobtracker.jspx").openConnection();
+    connection.setRequestMethod("GET");
+    connection.connect();
+
+    InputStream stream = connection.getInputStream();
+
+    BufferedReader br = new BufferedReader(new InputStreamReader(stream));
+    String l ;
+    while ((l = br.readLine()) != null) {
+      System.out.println(l);
+    }
 
     DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
     Document doc = parser.parse(xmlJspUrl);
diff --git a/src/test/org/apache/hadoop/mapreduce/TestMapReduceLocal.java b/src/test/org/apache/hadoop/mapreduce/TestMapReduceLocal.java
index 64dc59b..9277a96 100644
--- a/src/test/org/apache/hadoop/mapreduce/TestMapReduceLocal.java
+++ b/src/test/org/apache/hadoop/mapreduce/TestMapReduceLocal.java
@@ -86,9 +86,8 @@ public class TestMapReduceLocal extends TestCase {
     MiniMRCluster mr = null;
     try {
       mr = new MiniMRCluster(2, "file:///", 3);
-      Configuration conf = mr.createJobConf();
-      runWordCount(conf);
-      runMultiFileWordCount(conf);
+      runWordCount(mr.createJobConf());
+      runMultiFileWordCount(mr.createJobConf());
     } finally {
       if (mr != null) { mr.shutdown(); }
     }
-- 
1.7.0.4

