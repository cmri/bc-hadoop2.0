From ee983f646bf16147aeffe922a86b68e5bf903ed2 Mon Sep 17 00:00:00 2001
From: Tom White <tom@cloudera.com>
Date: Sat, 28 Jul 2012 18:44:14 -0400
Subject: [PATCH 1167/1357] MR1: CLOUDERA-BUILD. Fix TestNodeRefresh.

Reason: failing tests
Author: Tom White
Ref: CDH-6343
---
 .../org/apache/hadoop/mapred/TestNodeRefresh.java  |   27 +++++++++++++++++++-
 1 files changed, 26 insertions(+), 1 deletions(-)

diff --git a/src/test/org/apache/hadoop/mapred/TestNodeRefresh.java b/src/test/org/apache/hadoop/mapred/TestNodeRefresh.java
index ab60540..fc49c3b 100644
--- a/src/test/org/apache/hadoop/mapred/TestNodeRefresh.java
+++ b/src/test/org/apache/hadoop/mapred/TestNodeRefresh.java
@@ -267,8 +267,10 @@ public class TestNodeRefresh extends TestCase {
   public void testMRRefreshDecommissioning() throws IOException {
     // start a cluster with 2 hosts and empty exclude-hosts file
     Configuration conf = new Configuration();
+    conf.set("mapred.hosts.exclude", "hosts.exclude");
     File file = new File("hosts.exclude");
     file.delete();
+    file.createNewFile();
     startCluster(2, 1, 0, UserGroupInformation.getLoginUser(), conf);
     String hostToDecommission = getHostname(1);
     conf = mr.createJobConf(new JobConf(conf));
@@ -287,7 +289,16 @@ public class TestNodeRefresh extends TestCase {
       out.close();
     }
     file.deleteOnExit();
-
+    
+    Configuration.addDefaultResource("extra.xml");
+    writeToFile(new File("build/test/classes/extra.xml"),
+      "<configuration>" +
+      "<property>" +
+      "<name>mapred.hosts.exclude</name>" +
+      "<value>hosts.exclude</value>" +
+      "</property>" +
+      "</configuration>");
+    
     AdminOperationsProtocol client = getClient(conf, owner);
     try {
       client.refreshNodes();
@@ -384,4 +395,18 @@ public class TestNodeRefresh extends TestCase {
     
     stopCluster();
   }
+  
+  private void writeToFile(File file, String contents) throws IOException {
+    FileOutputStream out = new FileOutputStream(file);
+    BufferedWriter writer = null;
+    try {
+      writer = new BufferedWriter(new OutputStreamWriter(out));
+      writer.write(contents);
+    } finally {
+      if (writer != null) {
+        writer.close();
+      }
+      out.close();
+    }
+  }
 }
-- 
1.7.0.4

