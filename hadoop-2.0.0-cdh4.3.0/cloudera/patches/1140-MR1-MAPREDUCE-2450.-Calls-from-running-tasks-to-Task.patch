From 2f21b4b25af667475a46ca751186f16f214cac23 Mon Sep 17 00:00:00 2001
From: Tom White <tom@cloudera.com>
Date: Tue, 24 Apr 2012 15:09:59 -0700
Subject: [PATCH 1140/1357] MR1: MAPREDUCE-2450. Calls from running tasks to TaskTracker methods sometimes fail and incur a 60s timeout.

Reason: Performance
Author: Rajesh Balamohan
Ref: CDH-5206
---
 src/mapred/org/apache/hadoop/mapred/Task.java |   20 ++++++++++++++++++++
 1 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/src/mapred/org/apache/hadoop/mapred/Task.java b/src/mapred/org/apache/hadoop/mapred/Task.java
index 518d742..b17df5c 100644
--- a/src/mapred/org/apache/hadoop/mapred/Task.java
+++ b/src/mapred/org/apache/hadoop/mapred/Task.java
@@ -545,6 +545,8 @@ abstract public class Task implements Writable, Configurable {
     private Progress taskProgress;
     private JvmContext jvmContext;
     private Thread pingThread = null;
+    private boolean done = true;
+    private Object lock = new Object();
     /**
      * flag that indicates whether progress update needs to be sent to parent.
      * If true, it has been set. If false, it has been reset. 
@@ -633,6 +635,9 @@ abstract public class Task implements Writable, Configurable {
       // get current flag value and reset it as well
       boolean sendProgress = resetProgressFlag();
       while (!taskDone.get()) {
+        synchronized (lock) {
+          done = false;
+        }
         try {
           boolean taskFound = true; // whether TT knows about this task
           // sleep for a bit
@@ -665,6 +670,7 @@ abstract public class Task implements Writable, Configurable {
           // came back up), kill ourselves
           if (!taskFound) {
             LOG.warn("Parent died.  Exiting "+taskId);
+            resetDoneFlag();
             System.exit(66);
           }
 
@@ -677,10 +683,19 @@ abstract public class Task implements Writable, Configurable {
           if (remainingRetries == 0) {
             ReflectionUtils.logThreadInfo(LOG, "Communication exception", 0);
             LOG.warn("Last retry, killing "+taskId);
+            resetDoneFlag();
             System.exit(65);
           }
         }
       }
+      //Notify that we are done with the work
+      resetDoneFlag();
+    }
+    void resetDoneFlag() {
+      synchronized (lock) {
+        done = true;
+        lock.notify();
+      }
     }
     public void startCommunicationThread() {
       if (pingThread == null) {
@@ -692,6 +707,11 @@ abstract public class Task implements Writable, Configurable {
     public void stopCommunicationThread() throws InterruptedException {
       // Updating resources specified in ResourceCalculatorPlugin
       if (pingThread != null) {
+        synchronized (lock) {
+          while (!done) {
+            lock.wait();
+          }
+        }
         pingThread.interrupt();
         pingThread.join();
       }
-- 
1.7.0.4

