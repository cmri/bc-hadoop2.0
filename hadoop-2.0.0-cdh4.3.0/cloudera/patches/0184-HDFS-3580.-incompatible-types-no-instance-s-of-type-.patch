From e425d580faecff68f3c8ac0fd6d7012dba7fcfe6 Mon Sep 17 00:00:00 2001
From: Alejandro Abdelnur <tucu@apache.org>
Date: Fri, 29 Jun 2012 22:59:09 +0000
Subject: [PATCH 0184/1357] HDFS-3580. incompatible types; no instance(s) of type variable(s) V exist so that V conforms to boolean compiling HttpFSServer.java with OpenJDK

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1355595 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit 651d4ca1affeb684560f016ee41ec6aa6177c24b)
---
 .../apache/hadoop/fs/http/server/HttpFSServer.java |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java b/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java
index 70994b3..5e974c8 100644
--- a/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java
+++ b/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java
@@ -404,7 +404,7 @@ public class HttpFSServer {
     String doAs = params.get(DoAsParam.NAME, DoAsParam.class);
     switch (op.value()) {
       case APPEND: {
-        boolean hasData = params.get(DataParam.NAME, DataParam.class);
+        Boolean hasData = params.get(DataParam.NAME, DataParam.class);
         if (!hasData) {
           response = Response.temporaryRedirect(
             createUploadRedirectionURL(uriInfo,
@@ -478,7 +478,7 @@ public class HttpFSServer {
     String doAs = params.get(DoAsParam.NAME, DoAsParam.class);
     switch (op.value()) {
       case CREATE: {
-        boolean hasData = params.get(DataParam.NAME, DataParam.class);
+        Boolean hasData = params.get(DataParam.NAME, DataParam.class);
         if (!hasData) {
           response = Response.temporaryRedirect(
             createUploadRedirectionURL(uriInfo,
@@ -486,11 +486,11 @@ public class HttpFSServer {
         } else {
           Short permission = params.get(PermissionParam.NAME,
                                          PermissionParam.class);
-          boolean override = params.get(OverwriteParam.NAME,
+          Boolean override = params.get(OverwriteParam.NAME,
                                         OverwriteParam.class);
-          short replication = params.get(ReplicationParam.NAME,
+          Short replication = params.get(ReplicationParam.NAME,
                                          ReplicationParam.class);
-          long blockSize = params.get(BlockSizeParam.NAME,
+          Long blockSize = params.get(BlockSizeParam.NAME,
                                       BlockSizeParam.class);
           FSOperations.FSCreate command =
             new FSOperations.FSCreate(is, path, permission, override,
@@ -543,7 +543,7 @@ public class HttpFSServer {
         break;
       }
       case SETREPLICATION: {
-        short replication = params.get(ReplicationParam.NAME,
+        Short replication = params.get(ReplicationParam.NAME,
                                        ReplicationParam.class);
         FSOperations.FSSetReplication command =
           new FSOperations.FSSetReplication(path, replication);
@@ -553,9 +553,9 @@ public class HttpFSServer {
         break;
       }
       case SETTIMES: {
-        long modifiedTime = params.get(ModifiedTimeParam.NAME,
+        Long modifiedTime = params.get(ModifiedTimeParam.NAME,
                                        ModifiedTimeParam.class);
-        long accessTime = params.get(AccessTimeParam.NAME,
+        Long accessTime = params.get(AccessTimeParam.NAME,
                                      AccessTimeParam.class);
         FSOperations.FSSetTimes command =
           new FSOperations.FSSetTimes(path, modifiedTime, accessTime);
-- 
1.7.0.4

