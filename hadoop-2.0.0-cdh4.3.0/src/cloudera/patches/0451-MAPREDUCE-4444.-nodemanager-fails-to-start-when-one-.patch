From cae2c413f0c3e19b4c65158daf85514cd642f576 Mon Sep 17 00:00:00 2001
From: Robert Joseph Evans <bobby@apache.org>
Date: Tue, 31 Jul 2012 21:08:40 +0000
Subject: [PATCH 0451/1357] MAPREDUCE-4444. nodemanager fails to start when one of the local-dirs is  bad (Jason Lowe via bobby)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1367783 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit 8ceb625775c5c8006efa33d4263b53ca4fc2d0f8)
---
 .../nodemanager/LocalDirsHandlerService.java       |   48 +++++++++++---------
 .../hadoop/yarn/server/TestDiskFailures.java       |   29 ++++++++++++
 2 files changed, 56 insertions(+), 21 deletions(-)

diff --git a/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java b/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java
index 52e8600..4e07b70 100644
--- a/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java
+++ b/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java
@@ -93,23 +93,7 @@ public class LocalDirsHandlerService extends AbstractService {
 
     @Override
     public void run() {
-      boolean newFailure = false;
-      if (localDirs.checkDirs()) {
-        newFailure = true;
-      }
-      if (logDirs.checkDirs()) {
-        newFailure = true;
-      }
-
-      if (newFailure) {
-        LOG.info("Disk(s) failed. " + getDisksHealthReport());
-        updateDirsInConfiguration();
-        if (!areDisksHealthy()) {
-          // Just log.
-          LOG.error("Most of the disks failed. " + getDisksHealthReport());
-        }
-      }
-      lastDisksCheckTime = System.currentTimeMillis();
+      checkDirs();
     }
   }
 
@@ -135,6 +119,10 @@ public class LocalDirsHandlerService extends AbstractService {
         YarnConfiguration.DEFAULT_NM_MIN_HEALTHY_DISKS_FRACTION);
     lastDisksCheckTime = System.currentTimeMillis();
     super.init(conf);
+
+    // Check the disk health immediately to weed out bad directories
+    // before other init code attempts to use them.
+    checkDirs();
   }
 
   /**
@@ -144,10 +132,8 @@ public class LocalDirsHandlerService extends AbstractService {
   public void start() {
     if (isDiskHealthCheckerEnabled) {
       dirsHandlerScheduler = new Timer("DiskHealthMonitor-Timer", true);
-      // Start the timer task for disk health checking immediately and
-      // then run periodically at interval time.
-      dirsHandlerScheduler.scheduleAtFixedRate(monitoringTimerTask, 0,
-                                                   diskHealthCheckInterval);
+      dirsHandlerScheduler.scheduleAtFixedRate(monitoringTimerTask,
+          diskHealthCheckInterval, diskHealthCheckInterval);
     }
     super.start();
   }
@@ -253,6 +239,26 @@ public class LocalDirsHandlerService extends AbstractService {
                       logDirs.toArray(new String[logDirs.size()]));
   }
 
+  private void checkDirs() {
+      boolean newFailure = false;
+      if (localDirs.checkDirs()) {
+        newFailure = true;
+      }
+      if (logDirs.checkDirs()) {
+        newFailure = true;
+      }
+
+      if (newFailure) {
+        LOG.info("Disk(s) failed. " + getDisksHealthReport());
+        updateDirsInConfiguration();
+        if (!areDisksHealthy()) {
+          // Just log.
+          LOG.error("Most of the disks failed. " + getDisksHealthReport());
+        }
+      }
+      lastDisksCheckTime = System.currentTimeMillis();
+  }
+
   public Path getLocalPathForWrite(String pathStr) throws IOException {
     return localDirsAllocator.getLocalPathForWrite(pathStr, getConfig());
   }
diff --git a/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestDiskFailures.java b/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestDiskFailures.java
index 67755f1..559262d 100644
--- a/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestDiskFailures.java
+++ b/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestDiskFailures.java
@@ -110,6 +110,35 @@ public class TestDiskFailures {
     testDirsFailures(false);
   }
 
+  /**
+   * Make a local and log directory inaccessible during initialization
+   * and verify those bad directories are recognized and removed from
+   * the list of available local and log directories.
+   * @throws IOException
+   */
+  @Test
+  public void testDirFailuresOnStartup() throws IOException {
+    Configuration conf = new YarnConfiguration();
+    String localDir1 = new File(testDir, "localDir1").getPath();
+    String localDir2 = new File(testDir, "localDir2").getPath();
+    String logDir1 = new File(testDir, "logDir1").getPath();
+    String logDir2 = new File(testDir, "logDir2").getPath();
+    conf.set(YarnConfiguration.NM_LOCAL_DIRS, localDir1 + "," + localDir2);
+    conf.set(YarnConfiguration.NM_LOG_DIRS, logDir1 + "," + logDir2);
+
+    prepareDirToFail(localDir1);
+    prepareDirToFail(logDir2);
+
+    LocalDirsHandlerService dirSvc = new LocalDirsHandlerService();
+    dirSvc.init(conf);
+    List<String> localDirs = dirSvc.getLocalDirs();
+    Assert.assertEquals(1, localDirs.size());
+    Assert.assertEquals(localDir2, localDirs.get(0));
+    List<String> logDirs = dirSvc.getLogDirs();
+    Assert.assertEquals(1, logDirs.size());
+    Assert.assertEquals(logDir1, logDirs.get(0));
+  }
+
   private void testDirsFailures(boolean localORLogDirs) throws IOException {
     String dirType = localORLogDirs ? "local" : "log";
     String dirsProperty = localORLogDirs ? YarnConfiguration.NM_LOCAL_DIRS
-- 
1.7.0.4

