From 4ce324820adc3635e31624b0d4b98584896fb528 Mon Sep 17 00:00:00 2001
From: Eli Collins <eli@apache.org>
Date: Sat, 14 Jul 2012 00:04:36 +0000
Subject: [PATCH 0206/1357] HDFS-470. libhdfs should handle 0-length reads from FSInputStream correctly. Contributed by Colin Patrick McCabe

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1361447 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit cdcd912b36b9afa5e86d071761a3da29d794d055)
---
 .../hadoop-hdfs/src/main/native/hdfs.c             |    8 ++++++--
 .../hadoop-hdfs/src/main/native/hdfs.h             |    9 +++++++--
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/native/hdfs.c b/hadoop-hdfs-project/hadoop-hdfs/src/main/native/hdfs.c
index e61e1a8..bbc7908 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/native/hdfs.c
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/native/hdfs.c
@@ -878,11 +878,15 @@ static int handleReadResult(int success, jvalue jVal, jthrowable jExc,
     noReadBytes = -1;
   } else {
     noReadBytes = jVal.i;
-    if (noReadBytes < 0) {
+    if (noReadBytes == 0) {
+      // 0 from Java means try again, which is EINTR here
+      errno = EINTR;
+      noReadBytes = -1;
+    } else if (noReadBytes < 0) {
       // -1 from Java is EOF, which is 0 here
+      errno = 0;
       noReadBytes = 0;
     }
-    errno = 0;
   }
 
   return noReadBytes;
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/native/hdfs.h b/hadoop-hdfs-project/hadoop-hdfs/src/main/native/hdfs.h
index 70d9863..8afa9d5 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/native/hdfs.h
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/native/hdfs.h
@@ -311,8 +311,13 @@ extern  "C" {
      * @param file The file handle.
      * @param buffer The buffer to copy read bytes into.
      * @param length The length of the buffer.
-     * @return Returns the number of bytes actually read, possibly less
-     * than than length;-1 on error.
+     * @return      On success, a positive number indicating how many bytes
+     *              were read.
+     *              On end-of-file, 0.
+     *              On error, -1.  Errno will be set to the error code.
+     *              Just like the POSIX read function, hdfsRead will return -1
+     *              and set errno to EINTR if data is temporarily unavailable,
+     *              but we are not yet at the end of the file.
      */
     tSize hdfsRead(hdfsFS fs, hdfsFile file, void* buffer, tSize length);
 
-- 
1.7.0.4

