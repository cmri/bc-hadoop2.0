From 4a60a891645e6643ada7ee4a68e2770ace88ae70 Mon Sep 17 00:00:00 2001
From: Daryn Sharp <daryn@apache.org>
Date: Tue, 3 Jul 2012 20:28:30 +0000
Subject: [PATCH 0236/1357] HADOOP-8110. Fix trash checkpoint collisions (Jason Lowe via daryn)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1356918 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit aaa9b37e9beba285baa9cff20d06bd5f5e0c710b)
---
 hadoop-common-project/hadoop-common/CHANGES.txt    |    2 +
 .../org/apache/hadoop/fs/TrashPolicyDefault.java   |   24 +++++++++++++++-----
 2 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/CHANGES.txt b/hadoop-common-project/hadoop-common/CHANGES.txt
index 9f942c5..f4091d9 100644
--- a/hadoop-common-project/hadoop-common/CHANGES.txt
+++ b/hadoop-common-project/hadoop-common/CHANGES.txt
@@ -382,6 +382,8 @@ Release 0.23.3 - UNRELEASED
 
     HADOOP-8535. Cut hadoop build times in half (Job Eagles via bobby)
 
+    HADOOP-8110. Fix trash checkpoint collisions (Jason Lowe via daryn)
+
   OPTIMIZATIONS
 
   BUG FIXES
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
index 3a9eeaa..b6e9e88 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
@@ -35,6 +35,7 @@ import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.classification.InterfaceStability;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.conf.Configured;
+import org.apache.hadoop.fs.Options.Rename;
 import org.apache.hadoop.fs.permission.FsAction;
 import org.apache.hadoop.fs.permission.FsPermission;
 import org.apache.hadoop.util.Time;
@@ -149,21 +150,32 @@ public class TrashPolicyDefault extends TrashPolicy {
       new IOException("Failed to move to trash: "+path).initCause(cause);
   }
 
+  @SuppressWarnings("deprecation")
   @Override
   public void createCheckpoint() throws IOException {
     if (!fs.exists(current))                     // no trash, no checkpoint
       return;
 
-    Path checkpoint;
+    Path checkpointBase;
     synchronized (CHECKPOINT) {
-      checkpoint = new Path(trash, CHECKPOINT.format(new Date()));
+      checkpointBase = new Path(trash, CHECKPOINT.format(new Date()));
     }
+    Path checkpoint = checkpointBase;
 
-    if (fs.rename(current, checkpoint)) {
-      LOG.info("Created trash checkpoint: "+checkpoint.toUri().getPath());
-    } else {
-      throw new IOException("Failed to checkpoint trash: "+checkpoint);
+    int attempt = 0;
+    while (true) {
+      try {
+        fs.rename(current, checkpoint, Rename.NONE);
+        break;
+      } catch (FileAlreadyExistsException e) {
+        if (++attempt > 1000) {
+          throw new IOException("Failed to checkpoint trash: "+checkpoint);
+        }
+        checkpoint = checkpointBase.suffix("-" + attempt);
+      }
     }
+
+    LOG.info("Created trash checkpoint: "+checkpoint.toUri().getPath());
   }
 
   @Override
-- 
1.7.0.4

