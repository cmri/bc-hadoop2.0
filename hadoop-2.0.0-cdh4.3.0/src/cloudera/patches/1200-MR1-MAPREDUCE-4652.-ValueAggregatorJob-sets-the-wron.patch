From c048b3d0de706c4a7b0769d9cdd5e2a297c74228 Mon Sep 17 00:00:00 2001
From: Thomas White <tomwhite@apache.org>
Date: Tue, 25 Sep 2012 11:51:19 +0000
Subject: [PATCH 1200/1357] MR1: MAPREDUCE-4652. ValueAggregatorJob sets the wrong job jar. Contributed by Ahmed Radwan.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-1@1389821 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/hadoop/examples/AggregateWordCount.java |    2 +-
 .../hadoop/examples/AggregateWordHistogram.java    |    5 ++-
 .../mapred/lib/aggregate/ValueAggregatorJob.java   |   37 ++++++++++++++++----
 3 files changed, 34 insertions(+), 10 deletions(-)

diff --git a/src/examples/org/apache/hadoop/examples/AggregateWordCount.java b/src/examples/org/apache/hadoop/examples/AggregateWordCount.java
index 671be83..0442dcd 100644
--- a/src/examples/org/apache/hadoop/examples/AggregateWordCount.java
+++ b/src/examples/org/apache/hadoop/examples/AggregateWordCount.java
@@ -69,7 +69,7 @@ public class AggregateWordCount {
   @SuppressWarnings("unchecked")
   public static void main(String[] args) throws IOException {
     JobConf conf = ValueAggregatorJob.createValueAggregatorJob(args
-        , new Class[] {WordCountPlugInClass.class});
+        , new Class[] {WordCountPlugInClass.class}, AggregateWordCount.class);
    
     JobClient.runJob(conf);
   }
diff --git a/src/examples/org/apache/hadoop/examples/AggregateWordHistogram.java b/src/examples/org/apache/hadoop/examples/AggregateWordHistogram.java
index f8dc8ad..5ccbf01 100644
--- a/src/examples/org/apache/hadoop/examples/AggregateWordHistogram.java
+++ b/src/examples/org/apache/hadoop/examples/AggregateWordHistogram.java
@@ -72,8 +72,9 @@ public class AggregateWordHistogram {
    */
   @SuppressWarnings("unchecked")
   public static void main(String[] args) throws IOException {
-    JobConf conf = ValueAggregatorJob.createValueAggregatorJob(args
-        , new Class[] {AggregateWordHistogramPlugin.class});
+    JobConf conf = ValueAggregatorJob.createValueAggregatorJob(args,
+        new Class[] { AggregateWordHistogramPlugin.class },
+        AggregateWordHistogram.class);
     
     JobClient.runJob(conf);
   }
diff --git a/src/mapred/org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorJob.java b/src/mapred/org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorJob.java
index c500163..983e938 100644
--- a/src/mapred/org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorJob.java
+++ b/src/mapred/org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorJob.java
@@ -85,7 +85,7 @@ public class ValueAggregatorJob {
     
     JobControl theControl = new JobControl("ValueAggregatorJobs");
     ArrayList<Job> dependingJobs = new ArrayList<Job>();
-    JobConf aJobConf = createValueAggregatorJob(args);
+    JobConf aJobConf = createValueAggregatorJob(args, (Class<?>) null);
     if(descriptors != null)
       setAggregatorDescriptors(aJobConf, descriptors);
     Job aJob = new Job(aJobConf, dependingJobs);
@@ -96,18 +96,34 @@ public class ValueAggregatorJob {
   public static JobControl createValueAggregatorJobs(String args[]) throws IOException {
     return createValueAggregatorJobs(args, null);
   }
-  
+
+  /**
+   * Create an Aggregate based map/reduce job.
+   *
+   * @param args the arguments used for job creation. Generic hadoop
+   * arguments are accepted.
+   * @return a JobConf object ready for submission.
+   *
+   * @throws IOException
+   * @see GenericOptionsParser
+   */
+  public static JobConf createValueAggregatorJob(String args[])
+  throws IOException {
+    return createValueAggregatorJob(args, (Class<?>) null);
+  }
+
   /**
    * Create an Aggregate based map/reduce job.
    * 
    * @param args the arguments used for job creation. Generic hadoop
    * arguments are accepted.
+   * @param caller the the caller class.
    * @return a JobConf object ready for submission.
    * 
    * @throws IOException
    * @see GenericOptionsParser
    */
-  public static JobConf createValueAggregatorJob(String args[])
+  public static JobConf createValueAggregatorJob(String args[], Class<?> caller)
     throws IOException {
 
     Configuration conf = new Configuration();
@@ -156,7 +172,7 @@ public class ValueAggregatorJob {
     }
     String userJarFile = theJob.get("user.jar.file");
     if (userJarFile == null) {
-      theJob.setJarByClass(ValueAggregator.class);
+      theJob.setJarByClass(caller != null ? caller : ValueAggregatorJob.class);
     } else {
       theJob.setJar(userJarFile);
     }
@@ -180,10 +196,16 @@ public class ValueAggregatorJob {
     return theJob;
   }
 
+  public static JobConf createValueAggregatorJob(String args[],
+      Class<? extends ValueAggregatorDescriptor>[] descriptors)
+      throws IOException {
+    return createValueAggregatorJob(args, descriptors, null);
+  }
+
   public static JobConf createValueAggregatorJob(String args[]
-    , Class<? extends ValueAggregatorDescriptor>[] descriptors)
+    , Class<? extends ValueAggregatorDescriptor>[] descriptors, Class<?> caller)
   throws IOException {
-    JobConf job = createValueAggregatorJob(args);
+    JobConf job = createValueAggregatorJob(args, caller);
     setAggregatorDescriptors(job, descriptors);
     return job;
   }
@@ -204,7 +226,8 @@ public class ValueAggregatorJob {
    * @throws IOException
    */
   public static void main(String args[]) throws IOException {
-    JobConf job = ValueAggregatorJob.createValueAggregatorJob(args);
+    JobConf job = ValueAggregatorJob.createValueAggregatorJob(args,
+        ValueAggregatorJob.class);
     JobClient.runJob(job);
   }
 }
-- 
1.7.0.4

