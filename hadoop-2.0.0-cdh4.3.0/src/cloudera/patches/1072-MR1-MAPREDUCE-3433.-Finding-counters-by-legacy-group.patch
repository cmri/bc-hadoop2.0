From 9f06f4d529162ee51cd121e1604279dfbd15fc15 Mon Sep 17 00:00:00 2001
From: Tom White <tom@cloudera.com>
Date: Fri, 16 Dec 2011 11:20:04 -0800
Subject: [PATCH 1072/1357] MR1: MAPREDUCE-3433. Finding counters by legacy group name returns empty counters.

Author: Tom White
Reason: Support 0.23 API in MR1
Ref: CDH-3861
---
 .../mapreduce/counters/AbstractCounters.java       |   11 +++---
 .../org/apache/hadoop/mapred/TestCounters.java     |   34 +++++++++++++++++--
 2 files changed, 36 insertions(+), 9 deletions(-)

diff --git a/src/mapred/org/apache/hadoop/mapreduce/counters/AbstractCounters.java b/src/mapred/org/apache/hadoop/mapreduce/counters/AbstractCounters.java
index 7102467..d7c1237 100644
--- a/src/mapred/org/apache/hadoop/mapreduce/counters/AbstractCounters.java
+++ b/src/mapred/org/apache/hadoop/mapreduce/counters/AbstractCounters.java
@@ -194,15 +194,16 @@ public abstract class AbstractCounters<C extends Counter,
    * @return the group
    */
   public synchronized G getGroup(String groupName) {
-    boolean isFGroup = isFrameworkGroup(groupName);
-    G group = isFGroup ? fgroups.get(groupName) : groups.get(groupName);
+    String newGroupName = filterGroupName(groupName);
+    boolean isFGroup = isFrameworkGroup(newGroupName);
+    G group = isFGroup ? fgroups.get(newGroupName) : groups.get(newGroupName);
     if (group == null) {
-      group = groupFactory.newGroup(filterGroupName(groupName), limits);
+      group = groupFactory.newGroup(newGroupName, limits);
       if (isFGroup) {
-        fgroups.put(groupName, group);
+        fgroups.put(newGroupName, group);
       } else {
         limits.checkGroups(groups.size() + 1);
-        groups.put(groupName, group);
+        groups.put(newGroupName, group);
       }
     }
     return group;
diff --git a/src/test/org/apache/hadoop/mapred/TestCounters.java b/src/test/org/apache/hadoop/mapred/TestCounters.java
index 6804fae..0a7252f 100644
--- a/src/test/org/apache/hadoop/mapred/TestCounters.java
+++ b/src/test/org/apache/hadoop/mapred/TestCounters.java
@@ -17,17 +17,22 @@
  */
 package org.apache.hadoop.mapred;
 
-import junit.framework.TestCase;
+import static org.junit.Assert.assertEquals;
+
 import java.io.IOException;
 import java.text.ParseException;
 import java.util.Random;
 
 import org.apache.hadoop.mapred.Counters.Counter;
 
+import org.apache.hadoop.mapreduce.JobCounter;
+import org.apache.hadoop.mapreduce.TaskCounter;
+import org.junit.Test;
+
 /**
  * TestCounters checks the sanity and recoverability of {@code Counters}
  */
-public class TestCounters extends TestCase {
+public class TestCounters {
   enum myCounters {TEST1, TEST2};
   private static final long MAX_VALUE = 10;
   
@@ -70,9 +75,10 @@ public class TestCounters extends TestCase {
                  counter.hashCode(), recoveredCounter.hashCode());
   }
   
+  @Test
   public void testCounters() throws IOException {
-    Enum[] keysWithResource = {Task.Counter.MAP_INPUT_BYTES, 
-                               Task.Counter.MAP_OUTPUT_BYTES};
+    Enum[] keysWithResource = {TaskCounter.MAP_INPUT_RECORDS, 
+                               TaskCounter.MAP_OUTPUT_BYTES};
     
     Enum[] keysWithoutResource = {myCounters.TEST1, myCounters.TEST2};
     
@@ -119,6 +125,26 @@ public class TestCounters extends TestCase {
                    expectedValue, counter.getValue());
     }
   }
+
+  @SuppressWarnings("deprecation")
+  @Test
+  public void testLegacyNames() {
+    Counters counters = new Counters();
+    counters.incrCounter(TaskCounter.MAP_INPUT_RECORDS, 1);
+    counters.incrCounter(JobCounter.DATA_LOCAL_MAPS, 1);
+    
+    assertEquals("New name", 1, counters.findCounter(
+        TaskCounter.class.getName(), "MAP_INPUT_RECORDS").getValue());
+    assertEquals("Legacy name", 1, counters.findCounter(
+        "org.apache.hadoop.mapred.Task$Counter",
+        "MAP_INPUT_RECORDS").getValue());
+
+    assertEquals("New name", 1, counters.findCounter(
+        JobCounter.class.getName(), "DATA_LOCAL_MAPS").getValue());
+    assertEquals("Legacy name", 1, counters.findCounter(
+        "org.apache.hadoop.mapred.JobInProgress$Counter",
+        "DATA_LOCAL_MAPS").getValue());
+  }
   
   public static void main(String[] args) throws IOException {
     new TestCounters().testCounters();
-- 
1.7.0.4

