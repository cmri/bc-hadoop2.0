From e9bfc8182c8f235c036fd5c655af9025cf6c2855 Mon Sep 17 00:00:00 2001
From: Matteo Bertozzi <matteo.bertozzi@cloudera.com>
Date: Fri, 5 Apr 2013 18:02:06 +0100
Subject: [PATCH 60/96] Use 0.92 format to write HServerLoad.RegionLoad

Reason: Compatibility
Author: Matteo Bertozzi
Ref: CDH-8724

(cherry picked from commit 9d8485a8fbd824d9a4054b5017f6c0477c554907)
---
 .../java/org/apache/hadoop/hbase/HServerLoad.java  |   36 +++++++++++---------
 1 files changed, 20 insertions(+), 16 deletions(-)

diff --git a/src/main/java/org/apache/hadoop/hbase/HServerLoad.java b/src/main/java/org/apache/hadoop/hbase/HServerLoad.java
index ffdbc6b..cae9ac7 100644
--- a/src/main/java/org/apache/hadoop/hbase/HServerLoad.java
+++ b/src/main/java/org/apache/hadoop/hbase/HServerLoad.java
@@ -410,25 +410,29 @@ implements WritableComparable<HServerLoad> {
     }
 
     public void write(DataOutput out) throws IOException {
-      super.write(out);
-      WritableUtils.writeVInt(out, name.length);
+      // To be compatible with cdh 4.1 and apache 0.94 we write in v1 format.
+      // HBASE-5256, HBASE-5283, HBASE-5795, HBASE-7072
+      out.writeByte(1);
+      // in 0.92, the version was actually written twice
+      out.writeByte(1);
+      out.writeInt(name.length);
       out.write(name);
-      WritableUtils.writeVInt(out, stores);
-      WritableUtils.writeVInt(out, storefiles);
-      WritableUtils.writeVInt(out, storeUncompressedSizeMB);
-      WritableUtils.writeVInt(out, storefileSizeMB);
-      WritableUtils.writeVInt(out, memstoreSizeMB);
-      WritableUtils.writeVInt(out, storefileIndexSizeMB);
-      WritableUtils.writeVLong(out, readRequestsCount);
-      WritableUtils.writeVLong(out, writeRequestsCount);
-      WritableUtils.writeVInt(out, rootIndexSizeKB);
-      WritableUtils.writeVInt(out, totalStaticIndexSizeKB);
-      WritableUtils.writeVInt(out, totalStaticBloomSizeKB);
-      WritableUtils.writeVLong(out, totalCompactingKVs);
-      WritableUtils.writeVLong(out, currentCompactedKVs);
+      out.writeInt(stores);
+      out.writeInt(storefiles);
+      out.writeInt(storeUncompressedSizeMB);
+      out.writeInt(storefileSizeMB);
+      out.writeInt(memstoreSizeMB);
+      out.writeInt(storefileIndexSizeMB);
+      out.writeInt((int)readRequestsCount);
+      out.writeInt((int)writeRequestsCount);
+      out.writeInt(rootIndexSizeKB);
+      out.writeInt(totalStaticIndexSizeKB);
+      out.writeInt(totalStaticBloomSizeKB);
+      out.writeLong(totalCompactingKVs);
+      out.writeLong(currentCompactedKVs);
       // Backward compatibility - write out 0 as coprocessor count,
       // we don't report region-level coprocessors anymore.
-      WritableUtils.writeVInt(out, 0);
+      out.writeInt(0);
     }
 
     /**
-- 
1.7.0.4

