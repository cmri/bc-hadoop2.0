From 1a39f15776159fc6ae21a0f229dd9a29c9c7b56d Mon Sep 17 00:00:00 2001
From: David S. Wang <dsw@cloudera.com>
Date: Wed, 27 Mar 2013 10:46:03 -0700
Subject: [PATCH 27/96] HBASE-6826: Fix TestFromClientSide Failures
 Reason: Test
 Author: Enis Soztutar
 Ref: CDH-9513
 (cherry picked from commit 79f76df6268485c6ad182cdc303d3ee981b4b86b)

---
 .../hadoop/hbase/client/TestFromClientSide.java    |   19 ++++++++++++-------
 1 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java b/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java
index 2670f54..9136461 100644
--- a/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java
+++ b/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java
@@ -89,6 +89,7 @@ import org.apache.hadoop.hbase.regionserver.HRegionServer;
 import org.apache.hadoop.hbase.regionserver.NoSuchColumnFamilyException;
 import org.apache.hadoop.hbase.regionserver.Store;
 import org.apache.hadoop.hbase.util.Bytes;
+import org.apache.hadoop.hbase.util.EnvironmentEdgeManager;
 import org.apache.hadoop.hbase.util.Threads;
 import org.apache.hadoop.io.DataInputBuffer;
 import org.junit.After;
@@ -4203,7 +4204,7 @@ public class TestFromClientSide {
     assertEquals(0, Bytes.compareTo(Bytes.add(v1,v2), r.getValue(FAMILY, QUALIFIERS[0])));
     assertEquals(0, Bytes.compareTo(Bytes.add(v2,v1), r.getValue(FAMILY, QUALIFIERS[1])));
   }
- 
+
   @Test
   public void testIncrementWithDeletes() throws Exception {
     LOG.info("Starting testIncrementWithDeletes");
@@ -4398,14 +4399,15 @@ public class TestFromClientSide {
     HTable table = TEST_UTIL.createTable(tableName, new byte[][] { FAMILY },
         conf, Integer.MAX_VALUE);
     table.setAutoFlush(true);
-    Put put = new Put(ROW);
-    put.add(FAMILY, QUALIFIER, VALUE);
 
+    final long ts = EnvironmentEdgeManager.currentTimeMillis();
     Get get = new Get(ROW);
     get.addColumn(FAMILY, QUALIFIER);
     get.setMaxVersions();
 
     for (int versions = 1; versions <= numVersions; versions++) {
+      Put put = new Put(ROW);
+      put.add(FAMILY, QUALIFIER, ts + versions, VALUE);
       table.put(put);
 
       Result result = table.get(get);
@@ -4435,14 +4437,15 @@ public class TestFromClientSide {
     final HTable table = TEST_UTIL.createTable(tableName,
         new byte[][] { FAMILY }, conf);
     table.setAutoFlush(true);
-    final Put put = new Put(ROW);
-    put.add(FAMILY, QUALIFIER, VALUE);
 
+    final long ts = EnvironmentEdgeManager.currentTimeMillis();
     final Get get = new Get(ROW);
     get.addColumn(FAMILY, QUALIFIER);
     get.setMaxVersions();
 
     for (int versions = 1; versions <= numVersions; versions++) {
+      Put put = new Put(ROW);
+      put.add(FAMILY, QUALIFIER, ts + versions, VALUE);
       table.put(put);
 
       Result result = table.get(get);
@@ -4467,6 +4470,8 @@ public class TestFromClientSide {
         @Override
         public Void call() {
           try {
+            Put put = new Put(ROW);
+            put.add(FAMILY, QUALIFIER, ts + versionsCopy, VALUE);
             table.put(put);
 
             Result result = table.get(get);
@@ -4595,7 +4600,7 @@ public class TestFromClientSide {
     assertEquals("Did not access all the regions in the table", numOfRegions,
         scanMetrics.countOfRegions.getCurrentIntervalValue());
 
-    // now, test that the metrics are still collected even if you don't call close, but do 
+    // now, test that the metrics are still collected even if you don't call close, but do
     // run past the end of all the records
     Scan scanWithoutClose = new Scan();
     scanWithoutClose.setAttribute(Scan.SCAN_ATTRIBUTES_METRICS_ENABLE, Bytes.toBytes(Boolean.TRUE));
@@ -4798,7 +4803,7 @@ public class TestFromClientSide {
     assertNotNull(addrAfter);
     assertTrue(addrAfter.getPort() != addrCache.getPort());
     assertEquals(addrAfter.getPort(), addrNoCache.getPort());
-  }  
+  }
 
   @Test
   /**
-- 
1.7.0.4

