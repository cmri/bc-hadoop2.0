From cedd190ea49cbf5d249d23bce57af7d9fe762a53 Mon Sep 17 00:00:00 2001
From: David S. Wang <dsw@cloudera.com>
Date: Wed, 27 Mar 2013 08:51:08 -0700
Subject: [PATCH 11/96] HBASE-6601 TestImportExport on Hadoop 2 must copy YARN configuration vars

Author: Scott Forman
Reason: Test
Ref:CDH-8668
(cherry picked from commit 7f0ec75e5481d11c73b800de54c182160714fe30)
---
 .../hadoop/hbase/mapreduce/TestImportExport.java   |   38 ++++++++++++++++++++
 1 files changed, 38 insertions(+), 0 deletions(-)

diff --git a/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java b/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java
index c0cd2f1..80ca5b3 100644
--- a/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java
+++ b/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java
@@ -51,6 +51,8 @@ import org.junit.Before;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
+import java.util.Iterator;
+import java.util.Map;
 
 @Category(MediumTests.class)
 public class TestImportExport {
@@ -87,6 +89,27 @@ public class TestImportExport {
   }
 
   /**
+   * When running on Hadoop 2, we need to copy (or add) configuration values for keys
+   * that start with "yarn." (from the map reduce minicluster) to the
+   * configuration that will be used during the test (from the HBase minicluster). 
+   * YARN configuration values are set properly in the map reduce minicluster, 
+   * but not necessarily in the HBase mini cluster.
+   * @param srcConf the configuration to copy from (the map reduce minicluster version)
+   * @param destConf the configuration to copy to (the HBase minicluster version)
+   */
+  private void copyConfigurationValues(Configuration srcConf, Configuration destConf) {
+    Iterator<Map.Entry<String,String>> it = srcConf.iterator();
+    while (it.hasNext()) {
+      Map.Entry<String, String> entry = it.next();
+      String key = entry.getKey();
+      String value = entry.getValue();
+      if (key.startsWith("yarn.") && !value.isEmpty()) {
+        destConf.set(key, value);
+      }
+    }
+  }
+
+  /**
    * Test simple replication case with column mapping
    * @throws Exception
    */
@@ -113,6 +136,9 @@ public class TestImportExport {
 
     GenericOptionsParser opts = new GenericOptionsParser(new Configuration(cluster.getConfiguration()), args);
     Configuration conf = opts.getConfiguration();
+
+    // copy or add the necessary configuration values from the map reduce config to the hbase config
+    copyConfigurationValues(UTIL.getConfiguration(), conf);
     args = opts.getRemainingArgs();
 
     Job job = Export.createSubmittableJob(conf, args);
@@ -131,6 +157,9 @@ public class TestImportExport {
 
     opts = new GenericOptionsParser(new Configuration(cluster.getConfiguration()), args);
     conf = opts.getConfiguration();
+
+    // copy or add the necessary configuration values from the map reduce config to the hbase config
+    copyConfigurationValues(UTIL.getConfiguration(), conf);
     args = opts.getRemainingArgs();
 
     job = Import.createSubmittableJob(conf, args);
@@ -160,6 +189,9 @@ public class TestImportExport {
     GenericOptionsParser opts = new GenericOptionsParser(new Configuration(
         cluster.getConfiguration()), args);
     Configuration conf = opts.getConfiguration();
+
+    // copy or add the necessary configuration values from the map reduce config to the hbase config
+    copyConfigurationValues(UTIL.getConfiguration(), conf);
     args = opts.getRemainingArgs();
 
     Job job = Export.createSubmittableJob(conf, args);
@@ -202,6 +234,9 @@ public class TestImportExport {
 
     GenericOptionsParser opts = new GenericOptionsParser(new Configuration(cluster.getConfiguration()), args);
     Configuration conf = opts.getConfiguration();
+
+    // copy or add the necessary configuration values from the map reduce config to the hbase config
+    copyConfigurationValues(UTIL.getConfiguration(), conf);
     args = opts.getRemainingArgs();
 
     Job job = Export.createSubmittableJob(conf, args);
@@ -226,6 +261,9 @@ public class TestImportExport {
 
     opts = new GenericOptionsParser(new Configuration(cluster.getConfiguration()), args);
     conf = opts.getConfiguration();
+
+    // copy or add the necessary configuration values from the map reduce config to the hbase config
+    copyConfigurationValues(UTIL.getConfiguration(), conf);
     args = opts.getRemainingArgs();
 
     job = Import.createSubmittableJob(conf, args);
-- 
1.7.0.4

