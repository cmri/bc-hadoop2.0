From f52b5ef0bad6b2d603b5408183aa90aecdd6ae96 Mon Sep 17 00:00:00 2001
From: Himanshu <himanshu@cloudera.com>
Date: Fri, 12 Apr 2013 16:06:25 -0600
Subject: [PATCH 65/96] HBASE-5809 Avoid move api to take the destination server same as the source server.

Ref: CDH-11012
Author: Rajesh
Reason: Bug fix
---
 .../org/apache/hadoop/hbase/master/HMaster.java    |    5 +++++
 .../org/apache/hadoop/hbase/client/TestAdmin.java  |   17 +++++++++++++++++
 .../hbase/coprocessor/TestMasterObserver.java      |    6 +++---
 3 files changed, 25 insertions(+), 3 deletions(-)

diff --git a/src/main/java/org/apache/hadoop/hbase/master/HMaster.java b/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
index 9f4aefd..5c53106 100644
--- a/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
+++ b/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
@@ -1189,6 +1189,11 @@ Server {
       dest = balancer.randomAssignment(destServers);
     } else {
       dest = new ServerName(Bytes.toString(destServerName));
+      if (dest.equals(p.getSecond())) {
+        LOG.debug("Skipping move of region " + p.getFirst().getRegionNameAsString()
+          + " because region already assigned to the same server " + dest + ".");
+        return;
+      }
     }
     
     // Now we can do the move
diff --git a/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java b/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java
index 5d16cc8..3bda519 100644
--- a/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java
+++ b/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java
@@ -45,6 +45,8 @@ import org.apache.hadoop.hbase.catalog.CatalogTracker;
 import org.apache.hadoop.hbase.executor.EventHandler;
 import org.apache.hadoop.hbase.executor.EventHandler.EventType;
 import org.apache.hadoop.hbase.executor.ExecutorService;
+import org.apache.hadoop.hbase.master.AssignmentManager;
+import org.apache.hadoop.hbase.master.HMaster;
 import org.apache.hadoop.hbase.master.MasterServices;
 import org.apache.hadoop.hbase.regionserver.HRegion;
 import org.apache.hadoop.hbase.regionserver.HRegionServer;
@@ -1431,6 +1433,21 @@ public class TestAdmin {
     assertTrue(("actual count: " + count), count <= 2);
   }
 
+  @Test
+  public void testMoveToPreviouslyAssignedRS() throws IOException {
+    byte[] tableName = Bytes.toBytes("testMoveToPreviouslyAssignedRS");
+    MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();
+    HMaster master = cluster.getMaster();
+    HBaseAdmin localAdmin = createTable(tableName);
+    List<HRegionInfo> tableRegions = localAdmin.getTableRegions(tableName);
+    HRegionInfo hri = tableRegions.get(0);
+    AssignmentManager am = master.getAssignmentManager();
+    ServerName server = am.getRegionServerOfRegion(hri);
+    localAdmin.move(hri.getEncodedNameAsBytes(), Bytes.toBytes(server.getServerName()));
+    assertEquals("Current region server and region server before move should be same.", server,
+      am.getRegionServerOfRegion(hri));
+  }
+
   private void setUpforLogRolling() {
     // Force a region split after every 768KB
     TEST_UTIL.getConfiguration().setLong(HConstants.HREGION_MAX_FILESIZE,
diff --git a/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java b/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java
index 3a55076..73b4804 100644
--- a/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java
+++ b/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java
@@ -763,13 +763,13 @@ public class TestMasterObserver {
       // Try to force a move
       Collection<ServerName> servers = master.getClusterStatus().getServers();
       String destName = null;
-      String firstRegionHostnamePortStr = firstGoodPair.getValue().toString();
-      LOG.info("firstRegionHostnamePortStr=" + firstRegionHostnamePortStr);
+      String serverNameForFirstRegion = firstGoodPair.getValue().toString();
+      LOG.info("firstRegionHostnamePortStr=" + serverNameForFirstRegion);
       boolean found = false;
       // Find server that is NOT carrying the first region
       for (ServerName info : servers) {
         LOG.info("ServerName=" + info);
-        if (!firstRegionHostnamePortStr.equals(info.getHostAndPort())) {
+        if (!serverNameForFirstRegion.equals(info.getServerName())) {
           destName = info.toString();
           found = true;
           break;
-- 
1.7.0.4

